<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.com.example.mapper.AdminMapper">
    <resultMap id="BaseResultMap" type="com.example.com.com.example.entity.Admin">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="login_acount" jdbcType="VARCHAR" property="loginAcount"/>
        <result column="user_password" jdbcType="CHAR" property="userPassword"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="create_time" jdbcType="CHAR" property="createTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, login_acount, user_password, user_name, email, create_time
  </sql>
    <select id="selectByExample" parameterType="com.example.com.com.example.entity.AdminExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_admin
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_admin
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_admin
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.example.com.com.example.entity.AdminExample">
        delete from t_admin
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.example.com.com.example.entity.Admin">
    insert into t_admin (id, login_acount, user_password, 
      user_name, email, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{loginAcount,jdbcType=VARCHAR}, #{userPassword,jdbcType=CHAR}, 
      #{userName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createTime,jdbcType=CHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.example.com.com.example.entity.Admin">
        insert into t_admin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="loginAcount != null">
                login_acount,
            </if>
            <if test="userPassword != null">
                user_password,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="loginAcount != null">
                #{loginAcount,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                #{userPassword,jdbcType=CHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.com.com.example.entity.AdminExample" resultType="java.lang.Long">
        select count(*) from t_admin
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_admin
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.loginAcount != null">
                login_acount = #{record.loginAcount,jdbcType=VARCHAR},
            </if>
            <if test="record.userPassword != null">
                user_password = #{record.userPassword,jdbcType=CHAR},
            </if>
            <if test="record.userName != null">
                user_name = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_admin
        set id = #{record.id,jdbcType=INTEGER},
        login_acount = #{record.loginAcount,jdbcType=VARCHAR},
        user_password = #{record.userPassword,jdbcType=CHAR},
        user_name = #{record.userName,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=CHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.com.com.example.entity.Admin">
        update t_admin
        <set>
            <if test="loginAcount != null">
                login_acount = #{loginAcount,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                user_password = #{userPassword,jdbcType=CHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.com.com.example.entity.Admin">
    update t_admin
    set login_acount = #{loginAcount,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=CHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>